{"version":3,"sources":["actions/index.js","components/topbar.js","components/table.js","components/admin.js","components/card.js","components/user.js","components/login.js","reducers/dishlist.js","reducers/logstate.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["login","user","type","payload","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","MenuAppBar","props","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","dispatch","useDispatch","useSelector","state","logstate","handleClose","className","AppBar","position","color","Toolbar","IconButton","edge","aria-label","Typography","variant","name","isAdmin","Autocomplete","id","options","dishlist","getOptionLabel","option","dname","style","width","backgroundColor","renderInput","params","TextField","label","onChange","hc","onBlur","aria-controls","aria-haspopup","onClick","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","to","DishTable","TableContainer","component","Container","marginTop","Table","size","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","dcarb","dprot","dfat","dcal","tempvals","fab","bottom","right","Admin","setid","editvals","seteditvals","setOpen","open1","setOpen1","Fab","Dialog","aria-labelledby","onSubmit","e","preventDefault","tar","target","details","value","carb","prot","fat","DialogTitle","DialogContent","DialogContentText","required","fullWidth","helperText","inputProps","min","DialogActions","Button","startIcon","length","tid","element","findIndex","elem","editlist","parseInt","hidden","readOnly","defaultValue","maxWidth","marginLeft","media","height","paddingTop","avatar","red","cardactions","marginBottom","DishCard","Card","CardHeader","Avatar","dish","CardMedia","image","CardContent","CardActions","disableSpacing","User","search","setsearch","tmp","filter","t","display","flexWrap","Login","setisAdmin","rdval","setrdval","pass","FormControlLabel","control","Switch","checked","initialState","action","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","path","exact","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4SAqBaA,EAAO,SAACC,GACjB,MAAM,CACFC,KAAM,QACNC,QAASF,I,uBCRXG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIC,SAASK,EAAWC,GACjC,IAAMC,EAAUX,IAChB,EAAgCY,IAAMC,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,QAAQH,GAEfI,EAAWC,cACXtB,EAAOuB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAMlCC,EAAc,WAClBR,EAAY,OAGd,OAAQ,mCACI,OAATlB,EACC,qBAAK2B,UAAWb,EAAQR,KAAxB,SACE,cAACsB,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,YAAhC,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQN,UAAWb,EAAQN,WAAYsB,MAAM,UAAUI,aAAW,OAAnF,SACE,cAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKT,UAAWb,EAAQH,MAA5C,mBACSX,EAAKqC,QAGXrC,EAAKsC,QAAU,KAAO,cAACC,EAAA,EAAD,CACnBC,GAAG,iBACHC,QAAS5B,EAAM6B,SACfC,eAAgB,SAACC,GAAD,OAAYA,EAAOC,MAAQD,EAAOC,MAAQ,IAC1DC,MAAO,CAAEC,MAAO,IAAKC,gBAAiB,mBACtCC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,MAAM,cAAchB,QAAQ,WAAWiB,SAAUxC,EAAMyC,GAAIC,OAAQ1C,EAAMyC,SAE3H,gCACA,cAACtB,EAAA,EAAD,CACEE,aAAW,0BACXsB,gBAAc,cACdC,gBAAc,OACdC,QAhCG,SAACC,GAClBzC,EAAYyC,EAAMC,gBAgCJ9B,MAAM,UALR,SAOE,cAAC,IAAD,MAEF,eAAC,IAAD,CACEU,GAAG,cACHvB,SAAUA,EACV4C,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEd5C,KAAMA,EACN+C,QAASxC,EAbX,UAeE,cAACyC,EAAA,EAAD,CAAUT,QAAShC,EAAnB,qBACA,cAACyC,EAAA,EAAD,CAAUT,QAAS,kBAAMrC,ED5DjC,CACFpB,KAAM,YC2DI,iCAQJ,cAAC,WAAD,CAAUmE,GAAG,Q,qGCzFZ,SAASC,EAAUxD,GAC9B,IAAMQ,EAAWC,cACjB,OACI,cAACgD,EAAA,EAAD,CAAgBC,UAAWC,IAAW1B,MAAO,CAAC2B,UAAW,IAAzD,SACY,eAACC,EAAA,EAAD,CAAOC,KAAK,QAAQC,cAAc,EAAlC,UACA,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,4CAC1B,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,mDAC1B,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,8CAC1B,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,0CAC1B,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,2CAC1B,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,mDAG9B,cAACC,EAAA,EAAD,UACKpE,EAAM6B,SAASwC,KAAI,SAACC,GAAD,OACpB,eAACL,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWR,UAAU,KAAKa,MAAM,MAAMJ,MAAM,SAA5C,SAAsDG,EAAItC,QAC1D,cAACkC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BG,EAAIE,QAC/B,cAACN,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BG,EAAIG,QAC/B,cAACP,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BG,EAAII,OAC/B,cAACR,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BG,EAAIK,OAC/B,eAACT,EAAA,EAAD,CAAWC,MAAM,SAAjB,UACQ,cAAChD,EAAA,EAAD,CACIF,MAAM,UACN6C,KAAK,QACLjB,QAAS,kBAAM7C,EAAM4E,SAASN,EAAI3C,KAHtC,SAIC,cAAC,IAAD,MAED,cAACR,EAAA,EAAD,CACIF,MAAM,YACN6C,KAAK,QACLjB,QAAS,kBAAMrC,EF1B7C,CACFpB,KAAM,aACNC,QEwBmEiF,EAAI3C,MAH3C,SAIC,cAAC,IAAD,WAjBE2C,EAAI3C,c,oFChBrCrC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCqF,IAAK,CACH7D,SAAU,QACV8D,OAAQtF,EAAMK,QAAQ,GACtBkF,MAAOvF,EAAMK,QAAQ,QAIZ,SAASmF,IACpB,MAAmB9E,IAAMC,SAAS,GAAlC,mBAAOwB,EAAP,KAAUsD,EAAV,KACA,EAA+B/E,IAAMC,SAAS,IAA9C,mBAAO+E,EAAP,KAAgBC,EAAhB,KACA,EAAwBjF,IAAMC,UAAS,GAAvC,mBAAOG,EAAP,KAAa8E,EAAb,KACA,EAA0BlF,IAAMC,UAAS,GAAzC,mBAAOkF,EAAP,KAAcC,EAAd,KAEM9E,EAAWC,cACXR,EAAUX,IACVuC,EAAWnB,aAAY,SAAAC,GAAK,OAAIA,EAAMkB,YAsBtChB,EAAc,WAChBuE,GAAQ,GACRE,GAAS,IA2Bb,OAAO,qCACH,cAACvF,EAAD,IACA,eAAC4D,EAAA,EAAD,WACI,cAAC4B,EAAA,EAAD,CAAKtE,MAAM,UAAUI,aAAW,MAAMP,UAAWb,EAAQ4E,IAAKhC,QApC9C,WACpBuC,GAAQ,IAmCJ,SACQ,cAAC,IAAD,MAGR,cAACI,EAAA,EAAD,CAAQlF,KAAMA,EAAM+C,QAASxC,EAAa4E,kBAAgB,oBAA1D,SACA,uBAAMC,SAzDC,SAACC,GACZA,EAAEC,iBACFR,GAAQ,GACR,IAAMS,EAAMF,EAAEG,OACRC,EAAU,CACZpE,GAAIA,EACJK,MAAO6D,EAAIrE,KAAKwE,MAChBxB,MAAOqB,EAAII,KAAKD,MAChBvB,MAAOoB,EAAIK,KAAKF,MAChBtB,KAAMmB,EAAIM,IAAIH,MACdrB,KAAO,EAAEkB,EAAII,KAAKD,MAAQ,EAAEH,EAAIK,KAAKF,MAAQ,EAAEH,EAAIM,IAAIH,OAE3DxF,EHtCE,CACFpB,KAAM,UACNC,QGoCiB0G,IACjBd,EAAMtD,EAAG,IA4CL,UACQ,cAACyE,EAAA,EAAD,CAAazE,GAAG,oBAAhB,sBACA,eAAC0E,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,8CAIA,cAAChE,EAAA,EAAD,CACQiE,UAAQ,EACRC,WAAS,EACThF,KAAK,OACLe,MAAM,YACNkE,WAAW,2BACnB,cAACnE,EAAA,EAAD,CACQlD,KAAK,SACLmH,UAAQ,EACR/E,KAAK,OACLe,MAAM,gBACNmE,WAAY,CAAEC,IAAK,KACnBF,WAAW,+BACnB,cAACnE,EAAA,EAAD,CACQlD,KAAK,SACLmH,UAAQ,EACRC,WAAS,EACThF,KAAK,OACLe,MAAM,WACNmE,WAAY,CAAEC,IAAK,KACnBF,WAAW,0BACnB,cAACnE,EAAA,EAAD,CACQlD,KAAK,SACLmH,UAAQ,EACR/E,KAAK,MACLe,MAAM,OACNmE,WAAY,CAAEC,IAAK,KACnBF,WAAW,yBAEnB,eAACG,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAQhE,QAAShC,EAAaI,MAAM,UAApC,oBAGA,cAAC4F,EAAA,EAAD,CACItF,QAAQ,YACRN,MAAM,YACN6F,UAAW,cAAC,IAAD,IACX1H,KAAK,SAJT,yBAYS,IAApByC,EAASkF,OACE,cAACvD,EAAD,CAAW3B,SAAUA,EAAU+C,SApE9B,SAACoC,GACd1B,GAAS,GACT,IAAM2B,EAAUpF,EAASqF,WAAU,SAACC,GAAD,OAAUA,EAAKxF,IAAMqF,KACxD7B,EAAYtD,EAASoF,OAmEf,wGAEQ,KAAb/B,EACG,cAACM,EAAA,EAAD,CAAQlF,KAAM+E,EAAOhC,QAASxC,EAAa4E,kBAAgB,oBAA3D,SACA,uBAAMC,SA3FK,SAACC,GAChBA,EAAEC,iBACFN,GAAS,GACT,IAAMO,EAAMF,EAAEG,OACRsB,EAAW,CACbzF,GAAI0F,SAASxB,EAAIlE,GAAGqE,OACpBhE,MAAO6D,EAAIrE,KAAKwE,MAChBxB,MAAOqB,EAAII,KAAKD,MAChBvB,MAAOoB,EAAIK,KAAKF,MAChBtB,KAAMmB,EAAIM,IAAIH,MACdrB,KAAO,EAAEkB,EAAII,KAAKD,MAAQ,EAAEH,EAAIK,KAAKF,MAAQ,EAAEH,EAAIM,IAAIH,OAE3Db,EAAY,IACZ3E,EHzDE,CACFpB,KAAM,WACNC,QGuDkB+H,KA8Ed,UACQ,cAAChB,EAAA,EAAD,CAAazE,GAAG,oBAAhB,0BACA,eAAC0E,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,6CAGA,uBAAOlH,KAAK,SAASkI,QAAM,EAACC,UAAQ,EAC5B/F,KAAK,KACLwE,MAAOd,EAASvD,KACxB,cAACW,EAAA,EAAD,CACQiE,UAAQ,EACR/E,KAAK,OACLe,MAAM,YACNkE,WAAW,yBACXe,aAActC,EAASlD,QAC/B,cAACM,EAAA,EAAD,CACQlD,KAAK,SACLmH,UAAQ,EACR/E,KAAK,OACLe,MAAM,gBACNmE,WAAY,CAAEC,IAAK,KACnBF,WAAW,6BACXe,aAActC,EAASV,QAC/B,cAAClC,EAAA,EAAD,CACQlD,KAAK,SACLmH,UAAQ,EACR/E,KAAK,OACLe,MAAM,WACNmE,WAAY,CAAEC,IAAK,KACnBF,WAAW,wBACXe,aAActC,EAAST,QAC/B,cAACnC,EAAA,EAAD,CACQlD,KAAK,SACLmH,UAAQ,EACR/E,KAAK,MACLe,MAAM,OACNmE,WAAY,CAAEC,IAAK,KACnBF,WAAW,oBACXe,aAActC,EAASR,UAE/B,eAACkC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAQhE,QAAShC,EAAaI,MAAM,UAApC,oBAGA,cAAC4F,EAAA,EAAD,CACItF,QAAQ,YACRN,MAAM,YACN6F,UAAW,cAAC,IAAD,IACX1H,KAAK,SAJT,0BAWV,W,8GCxLJE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJgI,SAAU,IACVC,WAAYlI,EAAMK,QAAQ,GAC1B+D,UAAWpE,EAAMK,QAAQ,IAE3B8H,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACN3F,gBAAiB4F,KAAI,MAEvBC,YAAa,CACXpE,UAAWpE,EAAMK,SAAS,GAC1BoI,aAAczI,EAAMK,SAAS,QAIlB,SAASqI,GAASlI,GAC/B,IAAMC,EAAUX,KAEhB,OACE,eAAC6I,EAAA,EAAD,CAAMrH,UAAWb,EAAQR,KAAzB,UACE,cAAC2I,EAAA,EAAD,CACEN,OACE,cAACO,GAAA,EAAD,CAAQhH,aAAW,SAASP,UAAWb,EAAQ6H,OAA/C,SACG9H,EAAMsI,KAAKtG,MAAM,KAGtBlC,MAAOE,EAAMsI,KAAKtG,QAEpB,cAACuG,EAAA,EAAD,CACEzH,UAAWb,EAAQ0H,MACnBa,MAAM,mJACN1I,MAAOE,EAAMsI,KAAKtG,QAEpB,eAACyG,GAAA,EAAD,WACE,eAACnH,EAAA,EAAD,CAAYC,QAAQ,QAAQN,MAAM,gBAAgByC,UAAU,IAA5D,UACG1D,EAAMsI,KAAKtG,MADd,0JAIA,eAACV,EAAA,EAAD,CAAYC,QAAQ,YAAYN,MAAM,UAAUyC,UAAU,IAA1D,oBACU1D,EAAMsI,KAAK9D,MADrB,sBAC+CxE,EAAMsI,KAAK7D,MAD1D,iBAC+EzE,EAAMsI,KAAK5D,KAD1F,gBAC6G1E,EAAMsI,KAAK3D,KADxH,mBAIF,eAAC+D,GAAA,EAAD,CAAa5H,UAAWb,EAAQ+H,YAAaW,gBAAc,EAA3D,UACE,cAACxH,EAAA,EAAD,CAAYE,aAAW,mBAAvB,SACE,cAAC,KAAD,MAEF,cAACF,EAAA,EAAD,CAAYE,aAAW,QAAvB,SACE,cAAC,KAAD,YC3DK,SAASuH,KACtB,MAA2B1I,IAAMC,SAAS,IAA1C,mBAAO0I,EAAP,KAAcC,EAAd,KAEMjH,EAAWnB,aAAY,SAAAC,GAAK,OAAIA,EAAMkB,YAS5C,OAAQ,qCAEJ,cAAC9B,EAAD,CAAY8B,SAAUA,EAAUY,GATf,SAACkD,GACpB,IAAIoD,EACJA,EAAMlH,EAASmH,QAAO,SAACC,GAAD,OAAOA,EAAEjH,OAAS2D,EAAEG,OAAOE,SACjC8C,EAAJ,KAARC,EAAsBA,EACX,OAMb,cAACpF,EAAA,EAAD,CAAW1B,MAAO,CAACiH,QAAS,OAAQC,SAAU,QAA9C,SACmB,GAAjBN,EAAO9B,OACRlF,EAASwC,KAAK,SAACiE,GAAD,OACb,cAACJ,GAAD,CAAUI,KAAMA,OAIfO,EAAOxE,KAAK,SAACiE,GAAD,OACX,cAACJ,GAAD,CAAUI,KAAMA,Y,4CClBX,SAASc,KACpB,MAA4BlJ,IAAMC,UAAS,GAA3C,mBAAMsB,EAAN,KAAc4H,EAAd,KACA,EAAwBnJ,IAAMC,SAAS,IAAvC,mBAAMmJ,EAAN,KAAYC,EAAZ,KAEM/I,EAAWC,cAmBjB,OACI,eAACkD,EAAA,EAAD,CAAW8D,SAAS,KAApB,UACI,uBAAM/B,SAjBO,SAACC,GAClBA,EAAEC,iBACEnE,EACwB,SAArBkE,EAAEG,OAAOtE,KAAKwE,OAAuC,SAArBL,EAAEG,OAAO0D,KAAKxD,OAC7CxF,EAAStB,EAAM,CAACsC,KAAM,QAASC,QAASA,KACxC8H,EAAS,WAERA,EAAS,SAGd/I,EAAStB,EAAM,CAACsC,KAAMmE,EAAEG,OAAOtE,KAAKwE,MAAOvE,QAASA,KACpD8H,EAAS,WAMqBtH,MAAO,CAAC2B,UAAW,KAAjD,UACA,cAACtB,EAAA,EAAD,CACQiE,UAAQ,EACRC,WAAS,EACThF,KAAK,OACLe,MAAM,OACNkE,WAAW,2BACnB,cAACnE,EAAA,EAAD,CACQlD,KAAK,WACLmH,UAAQ,EACRC,WAAS,EACThF,KAAK,OACLe,MAAM,WACNkE,WAAW,+BACnB,cAACgD,GAAA,EAAD,CACQC,QAAS,cAACC,GAAA,EAAD,CAAQC,QAASnI,EAASe,SAlC9B,kBAAM6G,GAAY5H,IAkCoCD,KAAK,UAChEe,MAAM,YACd,cAACsE,EAAA,EAAD,CACIzH,KAAK,SACLmC,QAAQ,YACRN,MAAM,YACN6F,UAAW,cAAC,KAAD,IAJf,sBAOA,mBAAG7E,MAAO,CAAC2B,UAAU,IAArB,uIACA,qHACA,8GACA,yNACU,KAAT0F,EAAc,cAAC,WAAD,CAAU/F,GAAI+F,IAAY,Q,sBChE/CO,GAAe,CAAC,CAClBlI,GAAI,EACJK,MAAO,UACPwC,MAAO,EACPC,MAAO,GACPC,KAAM,EACNC,KAAM,KAEV,CACIhD,GAAI,EACJK,MAAO,UACPwC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNC,KAAM,KAoBK9C,GAhBE,WAAmC,IAAlClB,EAAiC,uDAAzBkJ,GAAcC,EAAW,uCAC/C,OAAOA,EAAO1K,MACV,IAAK,UACD,MAAM,GAAN,oBAAWuB,GAAX,CAAiBmJ,EAAOzK,UAC5B,IAAK,WACD,IAAM4H,EAAUtG,EAAMuG,WAAU,SAACC,GAAD,OAAUA,EAAKxF,IAAMmI,EAAOzK,QAAQsC,MAGpE,OADAhB,EAAMsG,GAAW6C,EAAOzK,QACjBsB,EACX,IAAK,aACD,OAAOA,EAAMqI,QAAO,SAACC,GAAD,OAAOA,EAAEtH,KAAOmI,EAAOzK,WAC/C,QACI,OAAOsB,IClBJC,GAZE,WAA2B,IAA1BD,EAAyB,uDAAjB,KAAMmJ,EAAW,uCACvC,OAAOA,EAAO1K,MACV,IAAK,QAED,OADAuB,EAAQmJ,EAAOzK,QAEnB,IAAK,SACD,OAAO,KACX,QACI,OAAOsB,ICCJoJ,GALKC,aAAgB,CAChCnI,YACAjB,cCDWqJ,GAFDC,aAAYH,GAAYI,OAAOC,8BAAgCD,OAAOC,gC,SCsBrEC,OAlBf,WACE,OACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACA,cAAC,KAAD,UACE,eAAC,SAAD,WACI,cAAC,QAAD,CAAOK,KAAK,IAAIC,OAAK,EAAC7G,UAAW0F,KACjC,cAAC,QAAD,CAAOkB,KAAK,SAASC,OAAK,EAAC7G,UAAWsB,IACtC,cAAC,QAAD,CAAOsF,KAAK,QAAQC,OAAK,EAAC7G,UAAWkF,KACrC,eAAC,QAAD,WACE,iCAAQ,cAAC,KAAD,CAAMrF,GAAG,IAAT,mCACR,qBAAKiH,IAAI,uEAAuEvI,MAAO,CAACwF,SAAU,OAAQG,OAAQ,qBCL/G6C,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oBCAdQ,IAASC,OACL,cAAC,KAAD,UACE,cAAC,GAAD,MAEJC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.5ccc16d5.chunk.js","sourcesContent":["export const adddish = (dish) =>{\r\n    return{\r\n        type: 'adddish',\r\n        payload: dish\r\n    }\r\n}\r\n\r\nexport const editdish = (dish) =>{\r\n    return{\r\n        type: 'editdish',\r\n        payload: dish\r\n    }\r\n}\r\n\r\nexport const deletedish = (id) =>{\r\n    return{\r\n        type: 'deletedish',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const login= (user) =>{\r\n    return{\r\n        type: 'login',\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const logout = () =>{\r\n    return{\r\n        type: 'logout',\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { logout } from \"../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state => state.logstate);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (<>\r\n    {user !== null ? \r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color='secondary'>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Hello {user.name}\r\n            </Typography>\r\n              \r\n              {user.isAdmin ? null : <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={props.dishlist}\r\n                  getOptionLabel={(option) => option.dname ? option.dname : \"\"}\r\n                  style={{ width: 300, backgroundColor: 'rgba(0,0,0,0.2)'}}\r\n                  renderInput={(params) => <TextField {...params} label=\"search dish\" variant=\"outlined\" onChange={props.hc} onBlur={props.hc}/>}\r\n                  />}\r\n                <div>  \r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                  <MenuItem onClick={() => dispatch(logout())}>Logout</MenuItem>\r\n                </Menu>\r\n              </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n              :\r\n\r\n              <Redirect to='/' /> \r\n        }\r\n        </>\r\n    );\r\n}\r\n","import {Container,IconButton } from '@material-ui/core';\r\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deletedish } from \"../actions\";\r\n\r\n\r\nexport default function DishTable(props){\r\n    const dispatch = useDispatch();\r\n    return(\r\n        <TableContainer component={Container} style={{marginTop: 15}}>\r\n                    <Table size=\"small\" stickyHeader={true}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                        <TableCell align=\"center\"><b>Dish Name</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Carbohydrates(g)</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Protiens(g)</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Fats(g)</b></TableCell>\r\n                        <TableCell align=\"center\"><b>Calories</b></TableCell>\r\n                        <TableCell align=\"center\"><b>edit/delete</b></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.dishlist.map((row) => (\r\n                        <TableRow key={row.id}>\r\n                            <TableCell component=\"th\" scope=\"row\" align=\"center\">{row.dname}</TableCell>\r\n                            <TableCell align=\"center\">{row.dcarb}</TableCell>\r\n                            <TableCell align=\"center\">{row.dprot}</TableCell>\r\n                            <TableCell align=\"center\">{row.dfat}</TableCell>\r\n                            <TableCell align=\"center\">{row.dcal}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                    <IconButton \r\n                                        color=\"primary\"\r\n                                        size=\"small\"\r\n                                        onClick={() => props.tempvals(row.id)}\r\n                                    ><EditIcon/>\r\n                                    </IconButton>\r\n                                    <IconButton \r\n                                        color=\"secondary\"\r\n                                        size=\"small\"\r\n                                        onClick={() => dispatch(deletedish(row.id))}\r\n                                    ><DeleteIcon/>\r\n                                    </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n    )\r\n}","import React from \"react\";\r\nimport MenuAppBar from './topbar'\r\nimport DishTable from \"./table\";\r\nimport {makeStyles, Container, TextField, Button, Fab } from '@material-ui/core';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport {Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { adddish,editdish } from \"../actions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nexport default function Admin(){\r\n    const [id,setid] = React.useState(2)\r\n    const [editvals,seteditvals] = React.useState('')\r\n    const [open, setOpen] = React.useState(false);\r\n    const [open1, setOpen1] = React.useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();    \r\n    const dishlist = useSelector(state => state.dishlist);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setOpen(false);\r\n        const tar = e.target\r\n        const details = {\r\n            id: id,\r\n            dname: tar.name.value,\r\n            dcarb: tar.carb.value,\r\n            dprot: tar.prot.value,\r\n            dfat: tar.fat.value,\r\n            dcal: (4*tar.carb.value)+(4*tar.prot.value)+(9*tar.fat.value)\r\n        }\r\n        dispatch(adddish(details))\r\n        setid(id+1)\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setOpen1(false);\r\n      };\r\n    \r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n        setOpen1(false);\r\n        const tar = e.target\r\n        const editlist = {\r\n            id: parseInt(tar.id.value),\r\n            dname: tar.name.value,\r\n            dcarb: tar.carb.value,\r\n            dprot: tar.prot.value,\r\n            dfat: tar.fat.value,\r\n            dcal: (4*tar.carb.value)+(4*tar.prot.value)+(9*tar.fat.value)\r\n        };\r\n        seteditvals('')\r\n        dispatch(editdish(editlist))\r\n       \r\n    }\r\n\r\n    const tempvals = (tid) => {\r\n        setOpen1(true)\r\n        const element = dishlist.findIndex((elem) => elem.id == tid);\r\n        seteditvals(dishlist[element])\r\n    }\r\n\r\n\r\n    return(<>\r\n        <MenuAppBar/>\r\n        <Container>\r\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handleClickOpen}>\r\n                    <PostAddIcon />\r\n                </Fab>\r\n\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <form onSubmit={submit}>\r\n                    <DialogTitle id=\"form-dialog-title\">Add dish</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText>\r\n                        Please enter the details below: \r\n                    </DialogContentText>\r\n                    \r\n                    <TextField\r\n                            required\r\n                            fullWidth\r\n                            name=\"name\"\r\n                            label=\"Dish Name\" \r\n                            helperText=\"Please enter dish name\" />\r\n                    <TextField\r\n                            type='number'\r\n                            required\r\n                            name='carb'\r\n                            label=\"carbohydrates\" \r\n                            inputProps={{ min: \"0\" }}\r\n                            helperText=\"Please enter carbohydrates\" /> \r\n                    <TextField\r\n                            type='number'\r\n                            required\r\n                            fullWidth\r\n                            name='prot'\r\n                            label=\"Protiens\" \r\n                            inputProps={{ min: \"0\" }}\r\n                            helperText=\"Please enter protiens\" />    \r\n                    <TextField\r\n                            type='number'\r\n                            required\r\n                            name='fat'\r\n                            label=\"Fats\" \r\n                            inputProps={{ min: \"0\" }}\r\n                            helperText=\"Please enter fats\" />          \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<PostAddIcon />}\r\n                        type='submit'\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                    </DialogActions>\r\n                    </form>  \r\n                </Dialog>\r\n\r\n        {dishlist.length !== 0? \r\n                    <DishTable dishlist={dishlist} tempvals={tempvals}/>\r\n            \r\n            : <p>No dish added, please add from the floating action button at right end.</p>}\r\n\r\n        {editvals !== '' ?\r\n            <Dialog open={open1} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <form onSubmit={handleEdit}>\r\n                    <DialogTitle id=\"form-dialog-title\">Edit details</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText>\r\n                        Please edit the details below: \r\n                    </DialogContentText>\r\n                    <input type='number' hidden readOnly\r\n                            name='id'\r\n                            value={editvals.id} />\r\n                    <TextField\r\n                            required\r\n                            name=\"name\"\r\n                            label=\"Dish Name\" \r\n                            helperText=\"Please enter dish name\" \r\n                            defaultValue={editvals.dname} />\r\n                    <TextField\r\n                            type='number'\r\n                            required\r\n                            name='carb'\r\n                            label=\"carbohydrates\" \r\n                            inputProps={{ min: \"0\" }}\r\n                            helperText=\"Please enter carbohydrates\"\r\n                            defaultValue={editvals.dcarb} /> \r\n                    <TextField\r\n                            type='number'\r\n                            required\r\n                            name='prot'\r\n                            label=\"Protiens\" \r\n                            inputProps={{ min: \"0\" }}\r\n                            helperText=\"Please enter protiens\" \r\n                            defaultValue={editvals.dprot} />    \r\n                    <TextField\r\n                            type='number'\r\n                            required\r\n                            name='fat'\r\n                            label=\"Fats\" \r\n                            inputProps={{ min: \"0\" }}\r\n                            helperText=\"Please enter fats\" \r\n                            defaultValue={editvals.dfat} />          \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<PostAddIcon />}\r\n                        type='submit'\r\n                    >\r\n                        Edit\r\n                    </Button>\r\n                    </DialogActions>\r\n                    </form>  \r\n                </Dialog>\r\n        : null\r\n        }\r\n        </Container></>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 350,\r\n    marginLeft: theme.spacing(2),\r\n    marginTop: theme.spacing(2) \r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardactions: {\r\n    marginTop: theme.spacing(-2),\r\n    marginBottom: theme.spacing(-1)\r\n  } \r\n}));\r\n\r\nexport default function DishCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {props.dish.dname[0]}\r\n          </Avatar>\r\n        }\r\n        title={props.dish.dname}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image=\"https://images.immediate.co.uk/production/volatile/sites/30/2020/08/chorizo-mozarella-gnocchi-bake-cropped-9ab73a3.jpg?quality=90&resize=768,574\"\r\n        title={props.dish.dname}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.dish.dname} is an impressive perfect party dish and a fun meal to cook together with your\r\n          guests. Add 1 cup of frozen peas along with the mussels, if you like.\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\r\n          Having {props.dish.dcarb} carbohydrates(g), {props.dish.dprot} protiens(g), {props.dish.dfat} fats(g) and {props.dish.dcal} calories.\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.cardactions} disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport MenuAppBar from './topbar'\r\nimport DishCard from './card'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nexport default function User() {\r\n  const [search,setsearch] = React.useState([])\r\n\r\n  const dishlist = useSelector(state => state.dishlist);\r\n  \r\n  const handleChange = (e) =>{\r\n    var tmp = ''\r\n    tmp = dishlist.filter((t) => t.dname == e.target.value)\r\n    if (tmp !== '') setsearch(tmp)\r\n    else setsearch([])\r\n  }\r\n\r\n  return (<>\r\n\r\n      <MenuAppBar dishlist={dishlist} hc={handleChange}/>\r\n      <Container style={{display: 'flex', flexWrap: \"wrap\"}}>\r\n       {search.length == 0 ? \r\n       dishlist.map( (dish) => (\r\n        <DishCard dish={dish}/>\r\n      )\r\n      )\r\n         :\r\n         search.map( (dish) => (\r\n          <DishCard dish={dish}/>\r\n        )\r\n        )\r\n        } \r\n        \r\n      </Container>\r\n      </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\"\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport default function Login(){\r\n    const[isAdmin,setisAdmin] = React.useState(false);\r\n    const[rdval,setrdval] = React.useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = () => setisAdmin(!isAdmin)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (isAdmin){\r\n            if(e.target.name.value==\"admin\" && e.target.pass.value==\"admin\"){\r\n                dispatch(login({name: \"admin\", isAdmin: isAdmin}));\r\n                setrdval(\"/admin\");\r\n            }\r\n            else setrdval(\"/404\");\r\n        }\r\n        else{\r\n            dispatch(login({name: e.target.name.value, isAdmin: isAdmin}))\r\n            setrdval(\"/user\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Container maxWidth='sm'>\r\n            <form onSubmit={handleSubmit} style={{marginTop: 100}}>\r\n            <TextField\r\n                    required\r\n                    fullWidth\r\n                    name=\"name\"\r\n                    label=\"Name\" \r\n                    helperText=\"Please enter your Name\" />\r\n            <TextField\r\n                    type=\"password\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"pass\"\r\n                    label=\"Password\" \r\n                    helperText=\"Please enter your password\" />   \r\n            <FormControlLabel\r\n                    control={<Switch checked={isAdmin} onChange={handleChange} name=\"Admin\" />}\r\n                    label=\"Admin ?\" />\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                startIcon={<SendIcon />}\r\n            >Login</Button>\r\n            </form>\r\n            <p style={{marginTop:40}}>**For admin login use username as \"admin\" and password as \"admin\" both without quotes, and toggle that switch to Admin ? </p>\r\n            <p>**For normal users enter any username, password and let that toggle to initial state</p>\r\n            <p>**For 404 page enter any username, password and toggle the switch to Admin ? </p>\r\n            <p>**For now, the search in user page works either if one types the dish name himself or if using the Autocomplete leaves the search field after selecting the option by clicking anywhere.</p>\r\n            {rdval !=='' ? <Redirect to={rdval} /> : null }\r\n        </Container>\r\n    )\r\n}","const initialState = [{\r\n    id: 0,\r\n    dname: 'Torturi',\r\n    dcarb: 9,\r\n    dprot: 28,\r\n    dfat: 0,\r\n    dcal: 148\r\n},\r\n{\r\n    id: 1,\r\n    dname: 'Wolturi',\r\n    dcarb: 3,\r\n    dprot: 4,\r\n    dfat: 2,\r\n    dcal: 46\r\n}\r\n]\r\n\r\nconst dishlist = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'adddish': \r\n            return [...state,action.payload]\r\n        case 'editdish':\r\n            const element = state.findIndex((elem) => elem.id == action.payload.id);\r\n            //edit that element\r\n            state[element] = action.payload\r\n            return state\r\n        case 'deletedish':\r\n            return state.filter((t) => t.id !== action.payload)          \r\n        default : \r\n            return state    \r\n    }          \r\n}\r\n\r\nexport default dishlist;","const logstate = (state = null, action) => {\r\n    switch(action.type){\r\n        case 'login':\r\n            state = action.payload\r\n            return state\r\n        case 'logout':\r\n            return null    \r\n        default : \r\n            return state \r\n    }          \r\n}\r\n\r\nexport default logstate;","import { combineReducers } from \"redux\";\r\nimport dishlist from \"./dishlist\";\r\nimport logstate from \"./logstate\"\r\n\r\nconst rootReducer = combineReducers({\r\n    dishlist,\r\n    logstate\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst store = createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import Admin from \"./components/admin\";\nimport User from \"./components/user\";\nimport Login from \"./components/login\"\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n      <Switch>\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/admin\" exact component={Admin} />\n          <Route path=\"/user\" exact component={User} />\n          <Route>\n            <button><Link to=\"/\">Go back to homepage</Link></button>\n            <img src='https://cdn.mos.cms.futurecdn.net/PuXipAW3AXUzUJ4uYyxPKC-1200-80.jpg' style={{maxWidth: '100%', height: 'auto'}}/>            \n            </Route>\n        </Switch>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport  Hashrouter from 'react-router-dom/HashRouter'\n\nReactDOM.render(\n    <Hashrouter>\n      <App />\n    </Hashrouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}